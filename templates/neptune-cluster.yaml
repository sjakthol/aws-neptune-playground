AWSTemplateFormatVersion: 2010-09-09
Description: Neptune Playground - Amazon Neptune Cluster

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub Security group for ${AWS::StackName} Neptune Cluster
      SecurityGroupIngress:
        - { IpProtocol: tcp, FromPort: 8182, ToPort: 8182, CidrIp: 10.0.0.0/8 }
      VpcId: !ImportValue infra-vpc-VpcId
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-SecurityGroup' }

  SubnetGroup:
    Type: AWS::Neptune::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub Subnet Group for ${AWS::StackName} Neptune cluster
      DBSubnetGroupName: !Sub ${AWS::StackName}-SubnetGroup
      SubnetIds:
        - !ImportValue infra-vpc-sn-private-with-endpoints-a
        - !ImportValue infra-vpc-sn-private-with-endpoints-b
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-SubnetGroup' }

  ClusterParameterGroup:
    Type: AWS::Neptune::DBClusterParameterGroup
    Properties:
      Description: !Sub Parameter group for ${AWS::StackName} Neptune cluster
      Name: !Sub ${AWS::StackName}-ClusterParameterGroup
      Family: neptune1.3
      Parameters:
        neptune_enable_audit_log: 1
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-ClusterParameterGroup' }

  InstanceParameterGroup:
    Type: AWS::Neptune::DBParameterGroup
    Properties:
      Description: !Sub Parameter group for ${AWS::StackName} Neptune cluster instances
      Family: neptune1.3
      Name: !Sub ${AWS::StackName}-InstanceParameterGroup
      Parameters:
        neptune_query_timeout: 120000
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-InstanceParameterGroup' }

  NeptuneCluster:
    Type: AWS::Neptune::DBCluster
    Properties:
      # AssociatedRoles:
      #   - DBClusterRole
      # AvailabilityZones:
      #   - String
      BackupRetentionPeriod: 1
      CopyTagsToSnapshot: true
      DBClusterIdentifier: !Sub ${AWS::StackName}-NeptuneCluster
      DBClusterParameterGroupName: !Ref ClusterParameterGroup
      DBInstanceParameterGroupName: !Ref InstanceParameterGroup
      DBPort: 8182
      DBSubnetGroupName: !Ref SubnetGroup
      DeletionProtection: false
      # EnableCloudwatchLogsExports:
      #   - String
      EngineVersion: 1.3.0.0
      IamAuthEnabled: true
      # KmsKeyId: String
      # PreferredBackupWindow: String
      # PreferredMaintenanceWindow: String
      # ServerlessScalingConfiguration:
      #   ServerlessScalingConfiguration
      StorageEncrypted: true
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-NeptuneCluster' }
      VpcSecurityGroupIds:
        - !Ref SecurityGroup

  NeptuneInstance:
    Type: AWS::Neptune::DBInstance
    Properties:
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: true
      DBClusterIdentifier: !Ref NeptuneCluster
      DBInstanceClass: db.r6i.xlarge
      DBInstanceIdentifier: !Sub ${AWS::StackName}-NeptuneInstance
      DBParameterGroupName: !Ref InstanceParameterGroup
      DBSubnetGroupName: !Ref SubnetGroup
      # PreferredMaintenanceWindow: String
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-NeptuneInstance' }

Outputs:
  NeptuneEndpoint:
    Value: !GetAtt NeptuneCluster.Endpoint
  NeptuneReadEndpoint:
    Value: !GetAtt NeptuneCluster.ReadEndpoint
  NeptunePort:
    Value: !GetAtt NeptuneCluster.Port
  NeptuneClusterResourceId:
    Value: !GetAtt NeptuneCluster.ClusterResourceId
